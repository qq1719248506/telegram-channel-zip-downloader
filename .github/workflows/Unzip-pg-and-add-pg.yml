name: Unzip pg and add pg

on:
  #push:
  schedule:
    - cron: '0 */8 * * *'
# 这里默认24小时内执行3次
  workflow_dispatch:
  
jobs:

  run-python-script: 

    runs-on: ubuntu-latest

    steps:
     - name: Checkout
       uses: actions/checkout@v4
       with:
         fetch-depth: 0 # 获取所有历史记录，以便搜索ZIP文件
          
     - name: Set up Python 3.9
       uses: actions/setup-python@v5
       with:
        python-version: 3.9 # 可以根据需要更改 Python 版本
        
     - name: telethon download telegram channel zip
       env:
        TELEGRAM_API_ID: ${{ secrets.TELEGRAM_API_ID }}
        TELEGRAM_API_HASH: ${{ secrets.TELEGRAM_API_HASH }}
       run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        python main.py
        
     - name: Get the name of the downloaded ZIP file
       id: get-zip-name
       run: |
         # 设置字符编码为 UTF-8
         export LC_ALL=en_US.UTF-8
         # 获取下载的ZIP文件名
         downloaded_zip_name=$(ls ./files/PandaGroovePG/*.zip | head -n 1)
         echo "DOWNLOADED_ZIP_NAME=$downloaded_zip_name" >> $GITHUB_ENV
     - name: List ZIP files in the repository
       id: list-zip-files
       run: |
         # 设置字符编码为 UTF-8
         export LC_ALL=en_US.UTF-8
         # 检查当前目录是否是 Git 仓库
         if ! git rev-parse --is-inside-work-tree > /dev/null 2>&1; then
           echo "错误：当前目录不是 Git 仓库。"
           exit 1
         fi
         # 列出仓库中的所有 ZIP 文件
         echo "Debug: Running git ls-tree..."
         git ls-tree -r --name-only HEAD
         echo "Debug: Filtering ZIP files..."
         zip_files=$(git ls-tree -r --name-only HEAD | grep '\.zip$' || true)
         echo "Debug: zip_files = $zip_files"
         if [ -z "$zip_files" ]; then
           echo "警告：仓库中没有 ZIP 文件。"
         fi
         echo "ZIP_FILES=$zip_files" >> $GITHUB_ENV
     - name: Check if downloaded ZIP filename matches a file in the repository 
       id: check-match
       run: |
         # 设置字符编码为 UTF-8
         export LC_ALL=en_US.UTF-8
         # 检查下载的ZIP文件名是否与仓库中的ZIP文件名匹配 
         downloaded_zip_name="${DOWNLOADED_ZIP_NAME##*/}"
         zip_files="${ZIP_FILES//'%'/'\\%'}"  # 替换%字符，避免shell解释
         if echo "$zip_files" | grep -qF -- "$downloaded_zip_name"; then
           echo "ZIP 文件名与仓库中的一个文件匹配。"
           echo "ZIP_MATCH=true" >> $GITHUB_ENV
         else
           echo "ZIP 文件名与仓库中的任何文件都不匹配。"
           echo "ZIP_MATCH=false" >> $GITHUB_ENV
         fi
      
     - name: Unzip file
       if: env.ZIP_MATCH == 'false'
       run: |
          unzip -o files/PandaGroovePG/*.zip -d pg
         
     - name: Add unzipped files pg to xytv
       if: env.ZIP_MATCH == 'false'
       run: |
          git clone --depth 5 https://github.com/xinyi1984/xytv.git 
          rm -r xytv/js/*
          rm -r xytv/lib/*
          rm -r xytv/pg.jar
          rm -r xytv/jsm.json
          rm -r xytv/pg.jar.md5
          rm -r xytv/README.txt
          rm -r xytv/*.zip
          mv ./pg/* xytv
          cp ./files/PandaGroovePG/*.zip xytv
          sed -i "s#https://fm.t4tv.hz.cz/json/market.json#./json/market.json#g" xytv/jsm.json
          sed -i "s#lib/alishare.txt#alishare.txt#g" xytv/jsm.json
          sed -i "s#lib/quarkshare.txt#quarkshare.txt#g" xytv/jsm.json
          cd xytv
          if git diff --quiet; then
            echo "没有未提交的更改。"
          else
            echo "存在未提交的更改。"
            git config --global user.name "github-actions[bot]"
            git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
            git add --all
            git remote rm origin
            git remote add origin "https://xytv:${{ secrets.GITHUBXYTV_TOKEN }}@github.com/xinyi1984/xytv"
            git commit -m "更新JSM Add unzipped files to xytv"
            git push -f -u origin master
          fi
       continue-on-error: true
       
     - name: Upload zip To telegram-channel-zip-downloader
       if: env.ZIP_MATCH == 'false'
       run: |  
          rm -rf  xytv
          rm -r ./pg*.zip
          rm -r ./pg
          mv ./files/PandaGroovePG/*.zip .
          git config --global user.name "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add .
          git commit -m "更新zip"
          git push -f -u origin main
